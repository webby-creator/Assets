{"version":3,"file":"index.js","mappings":"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","sources":["webpack:///./ts/util.ts","webpack:///./ts/mixin/collapse.ts","webpack:///./ts/mixin/viewport.ts","webpack:///./ts/mixin/element.ts","webpack:///./ts/mixin/delete.ts","webpack:///./ts/mixin/clickable.ts","webpack:///./ts/mixin/node.ts","webpack:///./ts/mixin/children.ts","webpack:///./ts/elements/container.ts","webpack:///./ts/elements/multiStateBox.ts","webpack:///./ts/elements/section.ts","webpack:///./ts/elements/text.ts","webpack:///./ts/mixin/effects.ts","webpack:///./ts/elements/repeaterItem.ts","webpack:///./ts/load.ts","webpack:///./ts/mixin/index.ts"],"sourcesContent":["/**\n * Calls all children elements.\n */\nexport function eachChildElement(element, func, parent) {\n    for (const child of element.children) {\n        const found = func(child, parent ?? null);\n        eachChildElement(child, func, found);\n    }\n}\nexport function applyMixins(derivedCtor, constructors) {\n    // Add instanceof check\n    Object.defineProperty(derivedCtor, Symbol.hasInstance, {\n        value(instance) {\n            return constructors.includes(instance);\n        }\n    });\n    constructors.forEach((baseCtor) => {\n        Object.getOwnPropertyNames(baseCtor.prototype)\n            .forEach((name) => {\n            Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n                Object.create(null));\n        });\n    });\n}\n","// TODO: Maybe something like v to remove <any>\n// export interface CollapseMixin extends ElementMixin {}\nexport class CollapseMixin {\n    hide() {\n        this.element.style.display = 'none';\n    }\n    show() {\n        this.element.style.display = 'block';\n    }\n    is_hidden() {\n        return this.element.style.display == 'none';\n    }\n    static NAME = \"collapse\";\n}\nexport var CollapseEvent;\n(function (CollapseEvent) {\n    CollapseEvent[\"Hide\"] = \"hide\";\n    CollapseEvent[\"Show\"] = \"show\";\n})(CollapseEvent || (CollapseEvent = {}));\n","// TODO: Global, which is created once debug starts/stops.\n// new IntersectionObserver(handleIntersection, { threshold: 0.5 });\nexport class ViewportMixin {\n    onViewportEnter(listener) {\n        // const element = <HTMLElement>(<any>this).element;\n    }\n    onViewportLeave(listener) {\n        //\n    }\n    static NAME = \"viewport\";\n}\nexport var ViewportEvent;\n(function (ViewportEvent) {\n    ViewportEvent[\"Enter\"] = \"enter\";\n    ViewportEvent[\"Leave\"] = \"leave\";\n})(ViewportEvent || (ViewportEvent = {}));\n","import { applyMixins } from \"../util\";\nimport { CollapseMixin } from \"./collapse\";\nimport { NodeMixin } from \"./node\";\nimport { ViewportMixin } from \"./viewport\";\nexport class ElementMixin {\n    node;\n    element;\n    parent;\n    customClassList = new Array();\n    constructor(type, element, parent) {\n        this.node = new NodeMixin(type, element);\n        this.parent = parent;\n        this.element = element;\n        // TODO: Move\n        if (parent != null && 'children' in parent) {\n            // @ts-expect-error ChildrenMixin instanceof parent\n            parent.children.push(this);\n        }\n    }\n    // TODO: isVisible\n    // TODO: Async - finished once scroll to is done.\n    scrollTo() {\n        this.element.scrollTo({\n            behavior: 'smooth'\n        });\n    }\n    get type() {\n        return this.node.type;\n    }\n    get id() {\n        return this.node.id;\n    }\n    static NAME = \"element\";\n}\napplyMixins(ElementMixin, [ViewportMixin, CollapseMixin]);\nexport var ElementEvent;\n(function (ElementEvent) {\n    ElementEvent[\"Type\"] = \"type\";\n    ElementEvent[\"Id\"] = \"id\";\n    ElementEvent[\"Parent\"] = \"parent\";\n    // CustomClass = \"customClass\",\n    // ScrollTo = \"scrollTo\"\n})(ElementEvent || (ElementEvent = {}));\n","export class DeleteMixin {\n    destroy() {\n        this.element.remove();\n    }\n    static NAME = \"delete\";\n}\nexport var DeleteEvent;\n(function (DeleteEvent) {\n    DeleteEvent[\"Destroy\"] = \"destroy\";\n})(DeleteEvent || (DeleteEvent = {}));\n","export class ClickableMixin {\n    onClick(listener) {\n        const element = this.element;\n        element.addEventListener('click', listener);\n        return () => element.removeEventListener('click', listener);\n    }\n    onDblClick(listener) {\n        const element = this.element;\n        element.addEventListener('dblclick', listener);\n        return () => element.removeEventListener('dblclick', listener);\n    }\n    static NAME = \"click\";\n}\nexport var ClickableEvent;\n(function (ClickableEvent) {\n    ClickableEvent[\"Click\"] = \"click\";\n    ClickableEvent[\"DblClick\"] = \"dblClick\";\n})(ClickableEvent || (ClickableEvent = {}));\n","// TODO: Not everything will be an Element\nexport class NodeMixin {\n    id;\n    type;\n    // TODO: readonly global: boolean;\n    constructor(type, element) {\n        this.type = type;\n        this.id = element.getAttribute('data-id') ?? \"\";\n    }\n    // TODO: Scroll To\n    static NAME = \"node\";\n}\n","export class ChildrenMixin {\n    children = new Array();\n    static NAME = \"children\";\n}\n","import { ChildrenMixin } from \"../mixin/children\";\nimport { DeleteMixin } from \"../mixin/delete\";\nimport { ElementMixin } from \"../mixin/element\";\nimport { applyMixins } from \"../util\";\nexport class ContainerElement extends ElementMixin {\n    constructor(element, parent) {\n        super(\"container\", element, parent);\n        // TODO: Implement into applyMixins (somehow override constructor)\n        Object.assign(this, new ChildrenMixin());\n    }\n}\napplyMixins(ContainerElement, [DeleteMixin, ChildrenMixin]);\n","import { ChildrenMixin } from \"../mixin/children\";\nimport { DeleteMixin } from \"../mixin/delete\";\nimport { ElementMixin } from \"../mixin/element\";\nimport { applyMixins } from \"../util\";\nexport class MultiStateBoxElement extends ElementMixin {\n    // Used as a Mixin Reference.\n    children = new Array();\n    constructor(element, parent) {\n        super(\"multi_state_box\", element, parent);\n        // TODO: Implement into applyMixins (somehow override constructor)\n        Object.assign(this, new ChildrenMixin());\n    }\n    get currentState() {\n        const active = parseInt(this.element.dataset['stateActive']);\n        return this.children[active];\n    }\n    get states() {\n        return this.children;\n    }\n    // TODO: Promise<MultiStateBoxItemElement>;\n    changeState(value) {\n        let setIndex = 0;\n        const activeIndex = parseInt(this.element.dataset['stateActive']);\n        this.children[activeIndex].element.style.display = 'none';\n        if (typeof value == 'number') {\n            setIndex = value;\n        }\n        else if (typeof value == 'string') {\n            const found = this.children.findIndex(v => v.id == value);\n            if (found == null) {\n                throw new Error(\"Unable to find State ID \" + value);\n            }\n            setIndex = found;\n        }\n        else {\n            const found = this.children.findIndex(v => v.id == value.id);\n            if (found == null) {\n                throw new Error(\"Unable to find State ID \" + value.id);\n            }\n            setIndex = found;\n        }\n        this.element.dataset['stateActive'] = '' + setIndex;\n        this.children[setIndex].element.style.display = '';\n        return this.children[setIndex];\n    }\n}\napplyMixins(MultiStateBoxElement, [DeleteMixin, ChildrenMixin]);\n","import { ChildrenMixin } from \"../mixin/children\";\nimport { DeleteMixin } from \"../mixin/delete\";\nimport { ElementMixin } from \"../mixin/element\";\nimport { applyMixins } from \"../util\";\nexport class SectionElement extends ElementMixin {\n    constructor(element, parent) {\n        super(\"section\", element, parent);\n        // TODO: Implement into applyMixins (somehow override constructor)\n        Object.assign(this, new ChildrenMixin());\n    }\n}\napplyMixins(SectionElement, [DeleteMixin, ChildrenMixin]);\n","import { ClickableMixin } from \"../mixin/clickable\";\nimport { CollapseMixin } from \"../mixin/collapse\";\nimport { DeleteMixin } from \"../mixin/delete\";\nimport { EffectsMixin } from \"../mixin/effects\";\nimport { ElementMixin } from \"../mixin/element\";\nimport { applyMixins } from \"../util\";\nexport class TextElement extends ElementMixin {\n    constructor(element, parent) {\n        super(\"text\", element, parent);\n    }\n    get text() {\n        return this.element.firstElementChild.innerText;\n    }\n    set text(value) {\n        this.element.firstElementChild.innerText = value;\n    }\n    get html() {\n        return this.element.innerHTML;\n    }\n    set html(value) {\n        this.element.innerHTML = value;\n    }\n}\napplyMixins(TextElement, [ClickableMixin, CollapseMixin, DeleteMixin, EffectsMixin]);\n","export class EffectsMixin {\n    effects = [];\n    static NAME = \"effects\";\n}\n","import { ChildrenMixin } from \"../mixin/children\";\nimport { DeleteMixin } from \"../mixin/delete\";\nimport { ElementMixin } from \"../mixin/element\";\nimport { applyMixins } from \"../util\";\nexport class RepeaterItemElement extends ElementMixin {\n    constructor(element, parent) {\n        super(\"repeater_item\", element, parent);\n        // TODO: Implement into applyMixins (somehow override constructor)\n        Object.assign(this, new ChildrenMixin());\n    }\n}\napplyMixins(RepeaterItemElement, [DeleteMixin, ChildrenMixin]);\n","import { eachChildElement } from \"./util\";\nimport { compTypeToSnakeCase, isComponentType, typeToElement } from \"./elements/index\";\nconst ELEMENTS = [];\n/**\n * HTML ID -> CustomElement\n */\nexport const HTML_ID_MAP = new Map();\n/**\n * Custom Element Type -> CustomElement Array\n */\nexport const TYPE_MAP = new Map();\nexport function loadProgram(element) {\n    ELEMENTS.length = 0;\n    HTML_ID_MAP.clear();\n    TYPE_MAP.clear();\n    eachChildElement(element, (child, parent) => {\n        const htmlId = child.getAttribute('data-id');\n        const type = child.getAttribute('data-type');\n        if (htmlId != null && child instanceof HTMLElement) {\n            if (type == null || !isComponentType(type)) {\n                throw new Error(\"Invalid/No Type Found for \" + htmlId);\n            }\n            const mixin = typeToElement(type, child, parent);\n            const type2 = compTypeToSnakeCase(mixin.type);\n            if (!TYPE_MAP.has(type2)) {\n                TYPE_MAP.set(type2, []);\n            }\n            ELEMENTS.push(mixin);\n            HTML_ID_MAP.set(mixin.id, mixin);\n            TYPE_MAP.get(type2)?.push(mixin);\n            return mixin;\n        }\n    });\n}\n","import { ClickableEvent, ClickableMixin } from \"./clickable\";\nimport { CollapseEvent, CollapseMixin } from \"./collapse\";\nimport { DeleteEvent, DeleteMixin } from \"./delete\";\nimport { EffectsMixin } from \"./effects\";\nimport { NodeMixin } from \"./node\";\nimport { ViewportEvent, ViewportMixin } from \"./viewport\";\nimport { ElementEvent, ElementMixin } from \"./element\";\nexport const MIXIN_LIST = [ClickableMixin, CollapseMixin, DeleteMixin, EffectsMixin, ElementMixin, NodeMixin, ViewportMixin];\nexport const COMPONENT_EVENTS = {\n    \"click\": [ClickableEvent.Click, ClickableEvent.DblClick],\n    \"collapse\": [CollapseEvent.Hide, CollapseEvent.Show],\n    \"delete\": [DeleteEvent.Destroy],\n    // \"effects\": [],\n    \"element\": [ElementEvent.Id, ElementEvent.Parent, ElementEvent.Type],\n    // \"node\": [],\n    \"viewport\": [ViewportEvent.Enter, ViewportEvent.Leave],\n};\n"],"names":["applyMixins","derivedCtor","constructors","Object","defineProperty","Symbol","hasInstance","value","instance","includes","forEach","baseCtor","getOwnPropertyNames","prototype","name","getOwnPropertyDescriptor","create","CollapseMixin","hide","this","element","style","display","show","is_hidden","static","CollapseEvent","ViewportEvent","ElementEvent","DeleteEvent","ClickableEvent","NodeMixin","id","type","constructor","getAttribute","node","parent","customClassList","Array","children","push","scrollTo","behavior","onViewportEnter","listener","onViewportLeave","ChildrenMixin","DeleteMixin","destroy","remove","super","assign","currentState","active","parseInt","dataset","states","changeState","setIndex","activeIndex","found","findIndex","v","Error","text","firstElementChild","innerText","html","innerHTML","onClick","addEventListener","removeEventListener","onDblClick","effects","Map","Click","DblClick","Hide","Show","Destroy","Id","Parent","Type","Enter","Leave"],"sourceRoot":""}